---
- hosts: vmwares

  vars:
    provision: false

  # For provisioning only, gathering facts doesn't work until the host is provisioned
  gather_facts: False

  roles:
    - zygote_config
    - { role: provision-esxi, delegate_to: "{{ origin_zygote }}", ansible_user: "{{ zygote_config.user }}", when: 'provision | bool' }

- hosts: vmwares

  vars:
    vmfs_partition_guid: AA31E02A400F11DB9590000C2911D1B8

    scratch_path: "/vmfs/volumes/datastore1/locker-{{ ansible_hostname }}"

    images_path: /vmfs/volumes/datastore1/iso

    images:
      - name: sysrescuecd
        url: http://downloads.sourceforge.net/project/systemrescuecd/sysresccd-x86/4.9.6/systemrescuecd-x86-4.9.6.iso
        local_file: systemrescuecd-x86-4.9.6.iso


  tasks:
    
    - name: Create partitions
      command: "partedUtil setptbl /dev/disks/{{ item.device_uuid }} gpt '1 2048 {{ item.max_sectors }} {{ vmfs_partition_guid }} 0'"
      with_items: "{{ esxi_config.storage.datastores }}"

    - name: Create filesystems
      command: "vmkfstools -C vmfs6 -S {{ item.name }} /dev/disks/{{ item.device_uuid }}:1"
      args:
        creates: "/vmfs/volumes/{{ item.name }}"
      with_items: "{{ esxi_config.storage.datastores }}"

    - name: Create passthrough devices
      command: "vmkfstools -z /vmfs/devices/disks/{{ item.device_uuid }} /vmfs/volumes/{{ item.target_datastore }}/{{ item.name }}.vmdk"
      args:
        creates: "/vmfs/volumes/{{ item.target_datastore }}/{{ item.name }}.vmdk"
      with_items: "{{ esxi_config.storage.passthrough }}"

    - name: Create a persistent scratchspace directory
      file: path="{{ scratch_path }}" state=directory

    - name: Set the scratch space parameterp
      command: "vim-cmd hostsvc/advopt/update ScratchConfig.ConfiguredScratchLocation string {{ scratch_path }}"

    - name: Create ISO directory
      file: path="{{ images_path }}" state=directory

    - name: Download images to local disk
      delegate_to: localhost
      command: "wget --no-clobber -O {{ item.local_file }} {{ item.url }}"
      args:
        creates: "{{ item.local_file }}"
      with_items: "{{ images }}"
    
    # We need to directly call scp because the copy module first copies the files to a temporary directory in ~/.ansible
    # This causes the filesystem to fill up.
    - name: Copy the ISO files
      delegate_to: localhost
      command: "scp {{ item.local_file }} {{ ansible_user }}@{{ ansible_host }}:{{ images_path }}"
      with_items: "{{ images }}"

    # A reboot is required to activate the scratch space
    - name: Restart server
      shell: reboot

    - name: Wait for SSH
      wait_for_connection: delay=10 timeout=600

